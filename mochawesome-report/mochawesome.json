{
  "stats": {
    "suites": 2,
    "tests": 33,
    "passes": 33,
    "pending": 0,
    "failures": 0,
    "start": "2018-04-28T06:45:37.655Z",
    "end": "2018-04-28T06:45:40.755Z",
    "duration": 3100,
    "testsRegistered": 33,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "b14dccce-6a6c-4afe-98fb-d3f43c91ab12",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "7c63c32c-61f2-4e2f-b0af-95a3978dcde0",
        "title": "Users API unit test",
        "fullFile": "/home/ubuntu/workspace/test/testModelApi.js",
        "file": "/test/testModelApi.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should NOT register a user",
            "fullTitle": "Users API unit test should NOT register a user",
            "timedOut": false,
            "duration": 71,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// post to /api/contacts\n(0, _supertest2.default)(_index.server).post('/api/user').query({ action: 'register' }).send({}).expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  res.body.success.should.equal(false);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "5aa49530-52dd-4317-8f62-d21677286a3b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should register a user",
            "fullTitle": "Users API unit test should register a user",
            "timedOut": false,
            "duration": 923,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// post to /api/contacts\n(0, _supertest2.default)(_index.server).post('/api/user').query({ action: 'register' }).send({\n  fName: \"Eddie\",\n  lName: \"Englebert\",\n  streetAddress1: \"1 Eddie street\",\n  streetAddress2: \"Eddie Estate\",\n  townCity: \"Eddie Town\",\n  countyState: \"County Eddie\",\n  email: \"eddie@email.com\",\n  userName: \"eddie101\",\n  password: \"eddiePword\",\n  admin: false\n}).expect('Content-type', /json/).expect(201).end(function (err, res) {\n  res.status.should.equal(201);\n  _should2.default.exist(res.body._id);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "fe2d66d2-7d36-4b37-b231-49e515073954",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT authenticate a user (a non-existing user)",
            "fullTitle": "Users API unit test should NOT authenticate a user (a non-existing user)",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).post('/api/user').send({ userName: 'notInDatabase', password: 'notInDatabase' }).expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  res.body.success.should.equal(false);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "9a3b44ec-e2d6-4da3-ba08-8704d22dacf0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should authenticate a user (barry101)",
            "fullTitle": "Users API unit test should authenticate a user (barry101)",
            "timedOut": false,
            "duration": 294,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).post('/api/user').send({ userName: 'barry101', password: 'barryPword' }).expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  res.body.token.substring(0, 3).should.equal('JWT');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "2c22e616-1203-4f94-a4f5-6d9a7e0fa0f4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT get all users without valid token",
            "fullTitle": "Users API unit test should NOT get all users without valid token",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/user').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "447d5506-656c-4d35-bc81-277557f1a77e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should get all users with valid token",
            "fullTitle": "Users API unit test should get all users with valid token",
            "timedOut": false,
            "duration": 23,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/user').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YWRhbTEwMQ.8ll7ugQIlrdkorqAG06rKp85SX5RX2-yDSBPl3HR8XI').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "396d8fef-24a2-4c9a-9a82-ef3a8618f7c6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT get a specific user (barry101) with admin (adam101) token",
            "fullTitle": "Users API unit test should NOT get a specific user (barry101) with admin (adam101) token",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/user/barry101').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "47cb67c3-4796-437f-9fc1-792dea2750bd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should get a specific user (barry101) with admin (adam101) token",
            "fullTitle": "Users API unit test should get a specific user (barry101) with admin (adam101) token",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YWRhbTEwMQ.8ll7ugQIlrdkorqAG06rKp85SX5RX2-yDSBPl3HR8XI').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "47267bdc-ffb7-4809-8850-58e526ebe821",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT modify a specific user (barry101) without a token",
            "fullTitle": "Users API unit test should NOT modify a specific user (barry101) without a token",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/user/barry101').send({ 'email': 'barryModified@bmail.com' }).expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "6a8cc8ab-1bb2-49dc-819b-473aef2bc303",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should modify a specific user (barry101) with admin (adam101) token",
            "fullTitle": "Users API unit test should modify a specific user (barry101) with admin (adam101) token",
            "timedOut": false,
            "duration": 25,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YWRhbTEwMQ.8ll7ugQIlrdkorqAG06rKp85SX5RX2-yDSBPl3HR8XI').send({ 'email': 'barryModified@bmail.com' }).expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  res.body.email.should.equal('barrymodified@bmail.com');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "5e893ef3-f209-4f8c-a6a9-f17287ccfaee",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT modify a specific user (barry101) with another users (danny101: non-admin) token",
            "fullTitle": "Users API unit test should NOT modify a specific user (barry101) with another users (danny101: non-admin) token",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZGFubnkxMDE.Gy0IIgskxPslMHZxCbBTzJSIAWvNoBA5EcCLTpuc--k').send({ 'email': 'barryModified@bmail.com' }).expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "212f882c-31a9-4a87-9c91-63674f797dd3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should modify a specific user (barry101) with the users (barry101: non-admin) token",
            "fullTitle": "Users API unit test should modify a specific user (barry101) with the users (barry101: non-admin) token",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YmFycnkxMDE.eGpcujr8vIzlixPX0zrV7b2-yt6vf-wnrH9aQfRref8').send({ 'email': 'barryModified@bmail.com' }).expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  res.body.email.should.equal('barrymodified@bmail.com');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "61f3daa9-50eb-487b-9c39-00ce2bc23031",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT delete a specific user (adam101) without admin token",
            "fullTitle": "Users API unit test should NOT delete a specific user (adam101) without admin token",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/user/adam101').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "b6ac5ea1-35f8-4ebb-b780-67df5b51d795",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should delete a specific user (adam101) with admin (adam101) token",
            "fullTitle": "Users API unit test should delete a specific user (adam101) with admin (adam101) token",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/user/adam101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YWRhbTEwMQ.8ll7ugQIlrdkorqAG06rKp85SX5RX2-yDSBPl3HR8XI').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  res.body.message.should.equal('User deleted');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "af0496b3-ae78-4a89-9600-4d6a792db64e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT delete a specific user (barry101) with another users danny101) token",
            "fullTitle": "Users API unit test should NOT delete a specific user (barry101) with another users danny101) token",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZGFubnkxMDE.Gy0IIgskxPslMHZxCbBTzJSIAWvNoBA5EcCLTpuc--k').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "0c3af992-ac5d-4786-8b48-6103f7b541e5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should delete a specific user with the users token",
            "fullTitle": "Users API unit test should delete a specific user with the users token",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YmFycnkxMDE.eGpcujr8vIzlixPX0zrV7b2-yt6vf-wnrH9aQfRref8').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  res.body.message.should.equal('User deleted');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "8d0b94fe-eaee-4cd5-b614-d5f054d472a3",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "5aa49530-52dd-4317-8f62-d21677286a3b",
          "fe2d66d2-7d36-4b37-b231-49e515073954",
          "9a3b44ec-e2d6-4da3-ba08-8704d22dacf0",
          "2c22e616-1203-4f94-a4f5-6d9a7e0fa0f4",
          "447d5506-656c-4d35-bc81-277557f1a77e",
          "396d8fef-24a2-4c9a-9a82-ef3a8618f7c6",
          "47cb67c3-4796-437f-9fc1-792dea2750bd",
          "47267bdc-ffb7-4809-8850-58e526ebe821",
          "6a8cc8ab-1bb2-49dc-819b-473aef2bc303",
          "5e893ef3-f209-4f8c-a6a9-f17287ccfaee",
          "212f882c-31a9-4a87-9c91-63674f797dd3",
          "61f3daa9-50eb-487b-9c39-00ce2bc23031",
          "b6ac5ea1-35f8-4ebb-b780-67df5b51d795",
          "af0496b3-ae78-4a89-9600-4d6a792db64e",
          "0c3af992-ac5d-4786-8b48-6103f7b541e5",
          "8d0b94fe-eaee-4cd5-b614-d5f054d472a3"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 1424,
        "root": false,
        "rootEmpty": false,
        "_timeout": 120000
      },
      {
        "uuid": "d1f68181-3e7c-4335-bc36-87f09cc18c10",
        "title": "Devices API unit test",
        "fullFile": "/home/ubuntu/workspace/test/testModelApi.js",
        "file": "/test/testModelApi.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should NOT get all devices without valid token",
            "fullTitle": "Devices API unit test should NOT get all devices without valid token",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/device').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "a805dba4-96f4-487b-af8d-2827ce79bacd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should get all devices with admin (Claire101) token",
            "fullTitle": "Devices API unit test should get all devices with admin (Claire101) token",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/device').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.Y2xhaXJlMTAx.hlwNkvb-NsWNNCTrznxQEQmHlxdLO-UqOUOKiRPdeJQ').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f54c58de-aed8-4266-91e1-b799fd5268c7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT get a specific device (device0001) without valid token",
            "fullTitle": "Devices API unit test should NOT get a specific device (device0001) without valid token",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/device/device0001').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f843f1fb-104f-4223-a73f-2d57b81e3ffe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should get a specific device (device0001) with admin (Claire101) token",
            "fullTitle": "Devices API unit test should get a specific device (device0001) with admin (Claire101) token",
            "timedOut": false,
            "duration": 33,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/device/device0001').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.Y2xhaXJlMTAx.hlwNkvb-NsWNNCTrznxQEQmHlxdLO-UqOUOKiRPdeJQ').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "a08fe112-798f-4e61-87ed-5079151fcb2a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT create a device (device0003) without valid token",
            "fullTitle": "Devices API unit test should NOT create a device (device0003) without valid token",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).post('/api/device').expect('Content-type', /json/).send({ 'deviceName': 'device0003' }).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "bf5943c2-0df0-4ceb-9bee-5ab24a482f08",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should create a device (device0003) with admin (Claire101) token",
            "fullTitle": "Devices API unit test should create a device (device0003) with admin (Claire101) token",
            "timedOut": false,
            "duration": 28,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).post('/api/device').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.Y2xhaXJlMTAx.hlwNkvb-NsWNNCTrznxQEQmHlxdLO-UqOUOKiRPdeJQ').expect('Content-type', /json/).send({ 'deviceName': 'device0003' }).expect(201).end(function (err, res) {\n  res.status.should.equal(201);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "39ad68d1-2d86-4267-8a7f-6342ca08b13c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT modify a device (device0003) without valid token",
            "fullTitle": "Devices API unit test should NOT modify a device (device0003) without valid token",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001').expect('Content-type', /json/).send({ \"maxTempWarning\": 18 }).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "ec773144-fcfc-4eba-801b-768164ddd9c3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should modify a device (device0003) with admin (Claire101) token",
            "fullTitle": "Devices API unit test should modify a device (device0003) with admin (Claire101) token",
            "timedOut": false,
            "duration": 15,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.Y2xhaXJlMTAx.hlwNkvb-NsWNNCTrznxQEQmHlxdLO-UqOUOKiRPdeJQ').expect('Content-type', /json/).send({ \"maxTempWarning\": 18 }).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "76cc24e9-2fdd-46d0-bc06-a1e68727dcbf",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT modify a device (device0001) with non-registered owners (eddie101) token",
            "fullTitle": "Devices API unit test should NOT modify a device (device0001) with non-registered owners (eddie101) token",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZWRkaWUxMDE.22U6dBqkmIsjRMD1bt-9uVOBKeFdXggBkGwCqVbq6GE').expect('Content-type', /json/).send({ \"maxTempWarning\": 18 }).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "7b0869c8-8bef-413c-9ea5-10790ba92d21",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should modify a device (device0001) with registered owners (danny101) token",
            "fullTitle": "Devices API unit test should modify a device (device0001) with registered owners (danny101) token",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZGFubnkxMDE.Gy0IIgskxPslMHZxCbBTzJSIAWvNoBA5EcCLTpuc--k').expect('Content-type', /json/).send({ \"maxTempWarning\": 18 }).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "9b9f9418-05b7-4708-8a42-cf8d8c27f5ee",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT modify a journey (journey0001) with non-registered owners (eddie101) token",
            "fullTitle": "Devices API unit test should NOT modify a journey (journey0001) with non-registered owners (eddie101) token",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001/journey/journey0001startDateTime').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZWRkaWUxMDE.22U6dBqkmIsjRMD1bt-9uVOBKeFdXggBkGwCqVbq6GE').expect('Content-type', /json/).send({ \"finishDateTime\": 'testDateTime' }).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "c1fd9fd7-d2c3-4bd7-87c0-8b0b3f339ccd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should modify a journey (journey0001) with registered owners (danny101) token",
            "fullTitle": "Devices API unit test should modify a journey (journey0001) with registered owners (danny101) token",
            "timedOut": false,
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001/journey/journey0001startDateTime').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZGFubnkxMDE.Gy0IIgskxPslMHZxCbBTzJSIAWvNoBA5EcCLTpuc--k').expect('Content-type', /json/).send({ \"finishDateTime\": 'testDateTime' }).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "6d991d84-88ac-4bfd-96e3-3c90b29fcb62",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT register an owner (eddie101) with a device (device0002) without valid token",
            "fullTitle": "Devices API unit test should NOT register an owner (eddie101) with a device (device0002) without valid token",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0002/registeredOwner').expect('Content-type', /json/).send({ \"registeredOwner\": 'eddie101' }).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "29f4caff-6bce-4563-9318-b0dfada2c0bb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should register an owner (eddie101) with a device (device0002) with valid token",
            "fullTitle": "Devices API unit test should register an owner (eddie101) with a device (device0002) with valid token",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0002/registeredOwner').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZWRkaWUxMDE.22U6dBqkmIsjRMD1bt-9uVOBKeFdXggBkGwCqVbq6GE').expect('Content-type', /json/).send({ \"registeredOwner\": 'eddie101' }).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "2b18b737-bfa1-4259-8c8d-d18e458d29e8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT delete a device (device0002) without valid token",
            "fullTitle": "Devices API unit test should NOT delete a device (device0002) without valid token",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/device/device0002').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "e3dbd78c-2230-4a89-930b-a74f3e6e6278",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT delete a device (device0001) with non-admin (danny101) token",
            "fullTitle": "Devices API unit test should NOT delete a device (device0001) with non-admin (danny101) token",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/device/device0002').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZGFubnkxMDE.Gy0IIgskxPslMHZxCbBTzJSIAWvNoBA5EcCLTpuc--k').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "113b5ba2-f61b-4ac6-ae28-1ad2a0141764",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should delete a device (device0002) with admin (claire101) token",
            "fullTitle": "Devices API unit test should delete a device (device0002) with admin (claire101) token",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/device/device0002').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.Y2xhaXJlMTAx.hlwNkvb-NsWNNCTrznxQEQmHlxdLO-UqOUOKiRPdeJQ').expect('Content-type', /json/).expect(204).end(function (err, res) {\n  res.status.should.equal(204);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "cbdaf8d8-f38c-47f2-935f-05040666f908",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "a805dba4-96f4-487b-af8d-2827ce79bacd",
          "f54c58de-aed8-4266-91e1-b799fd5268c7",
          "f843f1fb-104f-4223-a73f-2d57b81e3ffe",
          "a08fe112-798f-4e61-87ed-5079151fcb2a",
          "bf5943c2-0df0-4ceb-9bee-5ab24a482f08",
          "39ad68d1-2d86-4267-8a7f-6342ca08b13c",
          "ec773144-fcfc-4eba-801b-768164ddd9c3",
          "76cc24e9-2fdd-46d0-bc06-a1e68727dcbf",
          "7b0869c8-8bef-413c-9ea5-10790ba92d21",
          "9b9f9418-05b7-4708-8a42-cf8d8c27f5ee",
          "c1fd9fd7-d2c3-4bd7-87c0-8b0b3f339ccd",
          "6d991d84-88ac-4bfd-96e3-3c90b29fcb62",
          "29f4caff-6bce-4563-9318-b0dfada2c0bb",
          "2b18b737-bfa1-4259-8c8d-d18e458d29e8",
          "e3dbd78c-2230-4a89-930b-a74f3e6e6278",
          "113b5ba2-f61b-4ac6-ae28-1ad2a0141764",
          "cbdaf8d8-f38c-47f2-935f-05040666f908"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 198,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}