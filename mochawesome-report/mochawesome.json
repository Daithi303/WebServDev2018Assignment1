{
  "stats": {
    "suites": 2,
    "tests": 33,
    "passes": 33,
    "pending": 0,
    "failures": 0,
    "start": "2018-05-22T09:01:12.575Z",
    "end": "2018-05-22T09:01:15.810Z",
    "duration": 3235,
    "testsRegistered": 33,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "b1868012-5a8a-48a7-9a08-5090450d42d7",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "f16d2182-323a-4672-9fa3-d8301e647ddd",
        "title": "Users API unit test",
        "fullFile": "/home/ubuntu/workspace/test/testModelApi.js",
        "file": "/test/testModelApi.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should NOT register a user",
            "fullTitle": "Users API unit test should NOT register a user",
            "timedOut": false,
            "duration": 72,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// post to /api/contacts\n(0, _supertest2.default)(_index.server).post('/api/user').query({ action: 'register' }).send({}).expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  res.body.success.should.equal(false);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "ca7f08c7-02f9-4dd1-9678-5eb5fe0dfe0c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should register a user",
            "fullTitle": "Users API unit test should register a user",
            "timedOut": false,
            "duration": 2419,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// post to /api/contacts\n(0, _supertest2.default)(_index.server).post('/api/user').query({ action: 'register' }).send({\n  fName: \"Eddie\",\n  lName: \"Englebert\",\n  streetAddress1: \"1 Eddie street\",\n  streetAddress2: \"Eddie Estate\",\n  townCity: \"Eddie Town\",\n  countyState: \"County Eddie\",\n  email: \"eddie@email.com\",\n  userName: \"eddie101\",\n  password: \"eddiePword\",\n  admin: false\n}).expect('Content-type', /json/).expect(201).end(function (err, res) {\n  res.status.should.equal(201);\n  _should2.default.exist(res.body._id);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "ccab966f-df21-4b91-8145-1be2b3e856c6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT authenticate a user (a non-existing user)",
            "fullTitle": "Users API unit test should NOT authenticate a user (a non-existing user)",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).post('/api/user').send({ userName: 'notInDatabase', password: 'notInDatabase' }).expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  res.body.success.should.equal(false);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "9e11f7cc-a4cf-469d-a541-588df77004c8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should authenticate a user (barry101)",
            "fullTitle": "Users API unit test should authenticate a user (barry101)",
            "timedOut": false,
            "duration": 295,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).post('/api/user').send({ userName: 'barry101', password: 'barryPword' }).expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  res.body.token.substring(0, 3).should.equal('JWT');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "63844f33-06a8-4ff9-bc13-53b3002822ac",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT get all users without valid token",
            "fullTitle": "Users API unit test should NOT get all users without valid token",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/user').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "cbebaef5-56c4-43bf-84a5-4b551fb5a7aa",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should get all users with valid token",
            "fullTitle": "Users API unit test should get all users with valid token",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/user').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YWRhbTEwMQ.8ll7ugQIlrdkorqAG06rKp85SX5RX2-yDSBPl3HR8XI').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "98e43a8a-ad3b-4d6a-b98e-ad3b6d7529fc",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT get a specific user (barry101) with admin (adam101) token",
            "fullTitle": "Users API unit test should NOT get a specific user (barry101) with admin (adam101) token",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/user/barry101').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "85fab130-4045-4aae-a3f6-263fa6363243",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should get a specific user (barry101) with admin (adam101) token",
            "fullTitle": "Users API unit test should get a specific user (barry101) with admin (adam101) token",
            "timedOut": false,
            "duration": 15,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YWRhbTEwMQ.8ll7ugQIlrdkorqAG06rKp85SX5RX2-yDSBPl3HR8XI').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "3a48cc55-4b5c-4d96-abf8-836429e8ac96",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT modify a specific user (barry101) without a token",
            "fullTitle": "Users API unit test should NOT modify a specific user (barry101) without a token",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/user/barry101').send({ 'email': 'barryModified@bmail.com' }).expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "13eade70-7898-4242-b015-61049a5dc6c2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should modify a specific user (barry101) with admin (adam101) token",
            "fullTitle": "Users API unit test should modify a specific user (barry101) with admin (adam101) token",
            "timedOut": false,
            "duration": 39,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YWRhbTEwMQ.8ll7ugQIlrdkorqAG06rKp85SX5RX2-yDSBPl3HR8XI').send({ 'email': 'barryModified@bmail.com' }).expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  res.body.email.should.equal('barrymodified@bmail.com');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "fc51eb94-5039-43d6-a884-ab3aaea8446e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT modify a specific user (barry101) with another users (danny101: non-admin) token",
            "fullTitle": "Users API unit test should NOT modify a specific user (barry101) with another users (danny101: non-admin) token",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZGFubnkxMDE.Gy0IIgskxPslMHZxCbBTzJSIAWvNoBA5EcCLTpuc--k').send({ 'email': 'barryModified@bmail.com' }).expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "d04491bb-d3ba-4a12-905c-9af2ddabaff2",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should modify a specific user (barry101) with the users (barry101: non-admin) token",
            "fullTitle": "Users API unit test should modify a specific user (barry101) with the users (barry101: non-admin) token",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YmFycnkxMDE.eGpcujr8vIzlixPX0zrV7b2-yt6vf-wnrH9aQfRref8').send({ 'email': 'barryModified@bmail.com' }).expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  res.body.email.should.equal('barrymodified@bmail.com');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "dfadbfdf-a315-41a7-8437-4fc5d20742bb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT delete a specific user (adam101) without admin token",
            "fullTitle": "Users API unit test should NOT delete a specific user (adam101) without admin token",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/user/adam101').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "9791dbff-82a6-4c29-9ac4-290a3323161d",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should delete a specific user (adam101) with admin (adam101) token",
            "fullTitle": "Users API unit test should delete a specific user (adam101) with admin (adam101) token",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/user/adam101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YWRhbTEwMQ.8ll7ugQIlrdkorqAG06rKp85SX5RX2-yDSBPl3HR8XI').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  res.body.message.should.equal('User deleted');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "5303b720-1aef-40b2-9197-5357af3f4f26",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT delete a specific user (barry101) with another users danny101) token",
            "fullTitle": "Users API unit test should NOT delete a specific user (barry101) with another users danny101) token",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZGFubnkxMDE.Gy0IIgskxPslMHZxCbBTzJSIAWvNoBA5EcCLTpuc--k').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "8235b93e-b73f-4a8c-9a62-216f746c5b18",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should delete a specific user with the users token",
            "fullTitle": "Users API unit test should delete a specific user with the users token",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YmFycnkxMDE.eGpcujr8vIzlixPX0zrV7b2-yt6vf-wnrH9aQfRref8').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  res.body.message.should.equal('User deleted');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "70d227ad-714e-4ab9-8038-caa4886b0751",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "ca7f08c7-02f9-4dd1-9678-5eb5fe0dfe0c",
          "ccab966f-df21-4b91-8145-1be2b3e856c6",
          "9e11f7cc-a4cf-469d-a541-588df77004c8",
          "63844f33-06a8-4ff9-bc13-53b3002822ac",
          "cbebaef5-56c4-43bf-84a5-4b551fb5a7aa",
          "98e43a8a-ad3b-4d6a-b98e-ad3b6d7529fc",
          "85fab130-4045-4aae-a3f6-263fa6363243",
          "3a48cc55-4b5c-4d96-abf8-836429e8ac96",
          "13eade70-7898-4242-b015-61049a5dc6c2",
          "fc51eb94-5039-43d6-a884-ab3aaea8446e",
          "d04491bb-d3ba-4a12-905c-9af2ddabaff2",
          "dfadbfdf-a315-41a7-8437-4fc5d20742bb",
          "9791dbff-82a6-4c29-9ac4-290a3323161d",
          "5303b720-1aef-40b2-9197-5357af3f4f26",
          "8235b93e-b73f-4a8c-9a62-216f746c5b18",
          "70d227ad-714e-4ab9-8038-caa4886b0751"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 2929,
        "root": false,
        "rootEmpty": false,
        "_timeout": 120000
      },
      {
        "uuid": "88853467-92ed-4df7-9edc-19b7faefac8e",
        "title": "Devices API unit test",
        "fullFile": "/home/ubuntu/workspace/test/testModelApi.js",
        "file": "/test/testModelApi.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should NOT get all devices without valid token",
            "fullTitle": "Devices API unit test should NOT get all devices without valid token",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/device').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f01780d9-fbf7-4a3a-9e75-d1e805519c50",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should get all devices with admin (Claire101) token",
            "fullTitle": "Devices API unit test should get all devices with admin (Claire101) token",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/device').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.Y2xhaXJlMTAx.hlwNkvb-NsWNNCTrznxQEQmHlxdLO-UqOUOKiRPdeJQ').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "d8b9e775-4c73-4ce1-9c54-a3039514c299",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT get a specific device (device0001) without valid token",
            "fullTitle": "Devices API unit test should NOT get a specific device (device0001) without valid token",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/device/device0001').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "5b7eb324-f68b-45df-ba37-3a9c912ce69f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should get a specific device (device0001) with admin (Claire101) token",
            "fullTitle": "Devices API unit test should get a specific device (device0001) with admin (Claire101) token",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/device/device0001').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.Y2xhaXJlMTAx.hlwNkvb-NsWNNCTrznxQEQmHlxdLO-UqOUOKiRPdeJQ').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "c96a6d7f-715b-4d92-91c9-83e38ecd98d1",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT create a device (device0003) without valid token",
            "fullTitle": "Devices API unit test should NOT create a device (device0003) without valid token",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).post('/api/device').expect('Content-type', /json/).send({ 'deviceName': 'device0003' }).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f5f63a3e-577a-4ce2-9a0b-73a295a22c99",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should create a device (device0003) with admin (Claire101) token",
            "fullTitle": "Devices API unit test should create a device (device0003) with admin (Claire101) token",
            "timedOut": false,
            "duration": 69,
            "state": "passed",
            "speed": "medium",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).post('/api/device').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.Y2xhaXJlMTAx.hlwNkvb-NsWNNCTrznxQEQmHlxdLO-UqOUOKiRPdeJQ').expect('Content-type', /json/).send({ 'deviceName': 'device0003' }).expect(201).end(function (err, res) {\n  res.status.should.equal(201);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "bff14bbc-128c-48a4-a2f1-de92ecc24650",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT modify a device (device0003) without valid token",
            "fullTitle": "Devices API unit test should NOT modify a device (device0003) without valid token",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001').expect('Content-type', /json/).send({ \"maxTempWarning\": 18 }).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "5e814848-330f-4029-8cfd-e3160526c3f8",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should modify a device (device0003) with admin (Claire101) token",
            "fullTitle": "Devices API unit test should modify a device (device0003) with admin (Claire101) token",
            "timedOut": false,
            "duration": 32,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.Y2xhaXJlMTAx.hlwNkvb-NsWNNCTrznxQEQmHlxdLO-UqOUOKiRPdeJQ').expect('Content-type', /json/).send({ \"maxTempWarning\": 18 }).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "0e21ac08-25fd-4353-88be-6dfb54e28f25",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT modify a device (device0001) with non-registered owners (eddie101) token",
            "fullTitle": "Devices API unit test should NOT modify a device (device0001) with non-registered owners (eddie101) token",
            "timedOut": false,
            "duration": 10,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZWRkaWUxMDE.22U6dBqkmIsjRMD1bt-9uVOBKeFdXggBkGwCqVbq6GE').expect('Content-type', /json/).send({ \"maxTempWarning\": 18 }).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "46e0d568-b7e6-4cc7-911a-95036671f117",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should modify a device (device0001) with registered owners (danny101) token",
            "fullTitle": "Devices API unit test should modify a device (device0001) with registered owners (danny101) token",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZGFubnkxMDE.Gy0IIgskxPslMHZxCbBTzJSIAWvNoBA5EcCLTpuc--k').expect('Content-type', /json/).send({ \"maxTempWarning\": 18 }).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "52257d6f-623a-47dd-b4fa-e6feac87dcce",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT modify a journey (journey0001) with non-registered owners (eddie101) token",
            "fullTitle": "Devices API unit test should NOT modify a journey (journey0001) with non-registered owners (eddie101) token",
            "timedOut": false,
            "duration": 18,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001/journey/journey0001startDateTime').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZWRkaWUxMDE.22U6dBqkmIsjRMD1bt-9uVOBKeFdXggBkGwCqVbq6GE').expect('Content-type', /json/).send({ \"finishDateTime\": 'testDateTime' }).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "a732336f-6b9f-4a52-85f5-d97c812f9bb0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should modify a journey (journey0001) with registered owners (danny101) token",
            "fullTitle": "Devices API unit test should modify a journey (journey0001) with registered owners (danny101) token",
            "timedOut": false,
            "duration": 21,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001/journey/journey0001startDateTime').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZGFubnkxMDE.Gy0IIgskxPslMHZxCbBTzJSIAWvNoBA5EcCLTpuc--k').expect('Content-type', /json/).send({ \"finishDateTime\": 'testDateTime' }).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "bbd80fbd-55c5-4a48-94d8-95e5dedda465",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT register an owner (eddie101) with a device (device0002) without valid token",
            "fullTitle": "Devices API unit test should NOT register an owner (eddie101) with a device (device0002) without valid token",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0002/registeredOwner').expect('Content-type', /json/).send({ \"registeredOwner\": 'eddie101' }).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "d3519769-2e10-4cb3-91df-4c0d35cee42f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should register an owner (eddie101) with a device (device0002) with valid token",
            "fullTitle": "Devices API unit test should register an owner (eddie101) with a device (device0002) with valid token",
            "timedOut": false,
            "duration": 15,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0002/registeredOwner').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZWRkaWUxMDE.22U6dBqkmIsjRMD1bt-9uVOBKeFdXggBkGwCqVbq6GE').expect('Content-type', /json/).send({ \"registeredOwner\": 'eddie101' }).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "1e3f9f22-4985-4e72-a8c4-3ed08ac12976",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT delete a device (device0002) without valid token",
            "fullTitle": "Devices API unit test should NOT delete a device (device0002) without valid token",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/device/device0002').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "037d803d-8663-4856-866a-5697203cd1e3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT delete a device (device0001) with non-admin (danny101) token",
            "fullTitle": "Devices API unit test should NOT delete a device (device0001) with non-admin (danny101) token",
            "timedOut": false,
            "duration": 6,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/device/device0002').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZGFubnkxMDE.Gy0IIgskxPslMHZxCbBTzJSIAWvNoBA5EcCLTpuc--k').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "e366fd21-ca3b-4511-b572-c309f1548e07",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should delete a device (device0002) with admin (claire101) token",
            "fullTitle": "Devices API unit test should delete a device (device0002) with admin (claire101) token",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/device/device0002').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.Y2xhaXJlMTAx.hlwNkvb-NsWNNCTrznxQEQmHlxdLO-UqOUOKiRPdeJQ').expect('Content-type', /json/).expect(204).end(function (err, res) {\n  res.status.should.equal(204);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "eea91dfb-0e37-4290-98cb-9858144cbe5e",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "f01780d9-fbf7-4a3a-9e75-d1e805519c50",
          "d8b9e775-4c73-4ce1-9c54-a3039514c299",
          "5b7eb324-f68b-45df-ba37-3a9c912ce69f",
          "c96a6d7f-715b-4d92-91c9-83e38ecd98d1",
          "f5f63a3e-577a-4ce2-9a0b-73a295a22c99",
          "bff14bbc-128c-48a4-a2f1-de92ecc24650",
          "5e814848-330f-4029-8cfd-e3160526c3f8",
          "0e21ac08-25fd-4353-88be-6dfb54e28f25",
          "46e0d568-b7e6-4cc7-911a-95036671f117",
          "52257d6f-623a-47dd-b4fa-e6feac87dcce",
          "a732336f-6b9f-4a52-85f5-d97c812f9bb0",
          "bbd80fbd-55c5-4a48-94d8-95e5dedda465",
          "d3519769-2e10-4cb3-91df-4c0d35cee42f",
          "1e3f9f22-4985-4e72-a8c4-3ed08ac12976",
          "037d803d-8663-4856-866a-5697203cd1e3",
          "e366fd21-ca3b-4511-b572-c309f1548e07",
          "eea91dfb-0e37-4290-98cb-9858144cbe5e"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 251,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}