{
  "stats": {
    "suites": 2,
    "tests": 33,
    "passes": 33,
    "pending": 0,
    "failures": 0,
    "start": "2018-04-27T18:24:34.246Z",
    "end": "2018-04-27T18:24:37.576Z",
    "duration": 3330,
    "testsRegistered": 33,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "5ad15f4a-0390-4f6d-aeda-ca382f622408",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "d00eb0f2-0c0f-4892-974e-d27a9fb9f684",
        "title": "Users API unit test",
        "fullFile": "/home/ubuntu/workspace/test/testModelApi.js",
        "file": "/test/testModelApi.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should NOT register a user",
            "fullTitle": "Users API unit test should NOT register a user",
            "timedOut": false,
            "duration": 79,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// post to /api/contacts\n(0, _supertest2.default)(_index.server).post('/api/user').query({ action: 'register' }).send({}).expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  res.body.success.should.equal(false);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "6bdf2d9a-2814-4975-932e-b1ec3b2be8b6",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should register a user",
            "fullTitle": "Users API unit test should register a user",
            "timedOut": false,
            "duration": 2549,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "// post to /api/contacts\n(0, _supertest2.default)(_index.server).post('/api/user').query({ action: 'register' }).send({\n  fName: \"Eddie\",\n  lName: \"Englebert\",\n  streetAddress1: \"1 Eddie street\",\n  streetAddress2: \"Eddie Estate\",\n  townCity: \"Eddie Town\",\n  countyState: \"County Eddie\",\n  email: \"eddie@email.com\",\n  userName: \"eddie101\",\n  password: \"eddiePword\",\n  admin: false\n}).expect('Content-type', /json/).expect(201).end(function (err, res) {\n  res.status.should.equal(201);\n  _should2.default.exist(res.body._id);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "c3df15b1-63cd-41f7-9aae-3af9b7825213",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT authenticate a user (a non-existing user)",
            "fullTitle": "Users API unit test should NOT authenticate a user (a non-existing user)",
            "timedOut": false,
            "duration": 28,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).post('/api/user').send({ userName: 'notInDatabase', password: 'notInDatabase' }).expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  res.body.success.should.equal(false);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "7bfa12d1-d6dc-4d2c-a724-2355946d46f4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should authenticate a user (barry101)",
            "fullTitle": "Users API unit test should authenticate a user (barry101)",
            "timedOut": false,
            "duration": 303,
            "state": "passed",
            "speed": "slow",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).post('/api/user').send({ userName: 'barry101', password: 'barryPword' }).expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  res.body.token.substring(0, 3).should.equal('JWT');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "dceeda1e-7436-442a-a812-2a5a1827842a",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT get all users without valid token",
            "fullTitle": "Users API unit test should NOT get all users without valid token",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/user').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f49bbea3-c584-4636-b0a3-f49ce02df088",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should get all users with valid token",
            "fullTitle": "Users API unit test should get all users with valid token",
            "timedOut": false,
            "duration": 25,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/user').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YWRhbTEwMQ.8ll7ugQIlrdkorqAG06rKp85SX5RX2-yDSBPl3HR8XI').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "682240a0-59b3-4bf3-b21e-5ef750165b81",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT get a specific user (barry101) with admin (adam101) token",
            "fullTitle": "Users API unit test should NOT get a specific user (barry101) with admin (adam101) token",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/user/barry101').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "fd3bc439-6526-4a7c-9d6d-6b7674f31205",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should get a specific user (barry101) with admin (adam101) token",
            "fullTitle": "Users API unit test should get a specific user (barry101) with admin (adam101) token",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YWRhbTEwMQ.8ll7ugQIlrdkorqAG06rKp85SX5RX2-yDSBPl3HR8XI').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "3eb2db33-fa1d-44f7-b637-7c11324d3f3c",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT modify a specific user (barry101) without a token",
            "fullTitle": "Users API unit test should NOT modify a specific user (barry101) without a token",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/user/barry101').send({ 'email': 'barryModified@bmail.com' }).expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "d902b8a4-8e42-4ba6-a042-91befc44e439",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should modify a specific user (barry101) with admin (adam101) token",
            "fullTitle": "Users API unit test should modify a specific user (barry101) with admin (adam101) token",
            "timedOut": false,
            "duration": 28,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YWRhbTEwMQ.8ll7ugQIlrdkorqAG06rKp85SX5RX2-yDSBPl3HR8XI').send({ 'email': 'barryModified@bmail.com' }).expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  res.body.email.should.equal('barrymodified@bmail.com');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "2b6b279c-07e1-469d-9e20-4dd89eff6f2e",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT modify a specific user (barry101) with another users (danny101: non-admin) token",
            "fullTitle": "Users API unit test should NOT modify a specific user (barry101) with another users (danny101: non-admin) token",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZGFubnkxMDE.Gy0IIgskxPslMHZxCbBTzJSIAWvNoBA5EcCLTpuc--k').send({ 'email': 'barryModified@bmail.com' }).expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "eb818b8f-0f0b-4e7a-8fb7-d7dd4ad9a4fe",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should modify a specific user (barry101) with the users (barry101: non-admin) token",
            "fullTitle": "Users API unit test should modify a specific user (barry101) with the users (barry101: non-admin) token",
            "timedOut": false,
            "duration": 8,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YmFycnkxMDE.eGpcujr8vIzlixPX0zrV7b2-yt6vf-wnrH9aQfRref8').send({ 'email': 'barryModified@bmail.com' }).expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  res.body.email.should.equal('barrymodified@bmail.com');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f3a4f925-ac78-49ed-9991-e4aca488bdaa",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT delete a specific user (adam101) without admin token",
            "fullTitle": "Users API unit test should NOT delete a specific user (adam101) without admin token",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/user/adam101').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "b4eb5c7f-6b8d-44ca-b124-1818c12466cb",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should delete a specific user (adam101) with admin (adam101) token",
            "fullTitle": "Users API unit test should delete a specific user (adam101) with admin (adam101) token",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/user/adam101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YWRhbTEwMQ.8ll7ugQIlrdkorqAG06rKp85SX5RX2-yDSBPl3HR8XI').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  res.body.message.should.equal('User deleted');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "07f35319-75a3-4a36-9610-5b2d53db986f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT delete a specific user (barry101) with another users danny101) token",
            "fullTitle": "Users API unit test should NOT delete a specific user (barry101) with another users danny101) token",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZGFubnkxMDE.Gy0IIgskxPslMHZxCbBTzJSIAWvNoBA5EcCLTpuc--k').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "22c01c16-5f8b-49ab-892b-334e7f4765ab",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should delete a specific user with the users token",
            "fullTitle": "Users API unit test should delete a specific user with the users token",
            "timedOut": false,
            "duration": 11,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/user/barry101').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.YmFycnkxMDE.eGpcujr8vIzlixPX0zrV7b2-yt6vf-wnrH9aQfRref8').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  res.body.message.should.equal('User deleted');\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "89acb8a3-0629-4ab6-909a-caa0b67bd909",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "6bdf2d9a-2814-4975-932e-b1ec3b2be8b6",
          "c3df15b1-63cd-41f7-9aae-3af9b7825213",
          "7bfa12d1-d6dc-4d2c-a724-2355946d46f4",
          "dceeda1e-7436-442a-a812-2a5a1827842a",
          "f49bbea3-c584-4636-b0a3-f49ce02df088",
          "682240a0-59b3-4bf3-b21e-5ef750165b81",
          "fd3bc439-6526-4a7c-9d6d-6b7674f31205",
          "3eb2db33-fa1d-44f7-b637-7c11324d3f3c",
          "d902b8a4-8e42-4ba6-a042-91befc44e439",
          "2b6b279c-07e1-469d-9e20-4dd89eff6f2e",
          "eb818b8f-0f0b-4e7a-8fb7-d7dd4ad9a4fe",
          "f3a4f925-ac78-49ed-9991-e4aca488bdaa",
          "b4eb5c7f-6b8d-44ca-b124-1818c12466cb",
          "07f35319-75a3-4a36-9610-5b2d53db986f",
          "22c01c16-5f8b-49ab-892b-334e7f4765ab",
          "89acb8a3-0629-4ab6-909a-caa0b67bd909"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 3081,
        "root": false,
        "rootEmpty": false,
        "_timeout": 120000
      },
      {
        "uuid": "55cd7c3f-fecd-49f7-88d6-2e0c49b7a5fd",
        "title": "Devices API unit test",
        "fullFile": "/home/ubuntu/workspace/test/testModelApi.js",
        "file": "/test/testModelApi.js",
        "beforeHooks": [],
        "afterHooks": [],
        "tests": [
          {
            "title": "should NOT get all devices without valid token",
            "fullTitle": "Devices API unit test should NOT get all devices without valid token",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/device').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "9d740ce3-ac37-4128-9044-b8934be08f4b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should get all devices with admin (Claire101) token",
            "fullTitle": "Devices API unit test should get all devices with admin (Claire101) token",
            "timedOut": false,
            "duration": 17,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/device').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.Y2xhaXJlMTAx.hlwNkvb-NsWNNCTrznxQEQmHlxdLO-UqOUOKiRPdeJQ').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "0357461f-e4df-4963-b5db-a48a3b674ce7",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT get a specific device (device0001) without valid token",
            "fullTitle": "Devices API unit test should NOT get a specific device (device0001) without valid token",
            "timedOut": false,
            "duration": 2,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/device/device0001').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "f0609406-1b8d-4cd7-941f-53c91cb4fde0",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should get a specific device (device0001) with admin (Claire101) token",
            "fullTitle": "Devices API unit test should get a specific device (device0001) with admin (Claire101) token",
            "timedOut": false,
            "duration": 19,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).get('/api/device/device0001').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.Y2xhaXJlMTAx.hlwNkvb-NsWNNCTrznxQEQmHlxdLO-UqOUOKiRPdeJQ').expect('Content-type', /json/).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "d9d7b560-8710-4296-879c-e99102423851",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT create a device (device0003) without valid token",
            "fullTitle": "Devices API unit test should NOT create a device (device0003) without valid token",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).post('/api/device').expect('Content-type', /json/).send({ 'deviceName': 'device0003' }).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "1c0e260f-ae5e-425e-9fe8-28696dd21a02",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should create a device (device0003) with admin (Claire101) token",
            "fullTitle": "Devices API unit test should create a device (device0003) with admin (Claire101) token",
            "timedOut": false,
            "duration": 29,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).post('/api/device').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.Y2xhaXJlMTAx.hlwNkvb-NsWNNCTrznxQEQmHlxdLO-UqOUOKiRPdeJQ').expect('Content-type', /json/).send({ 'deviceName': 'device0003' }).expect(201).end(function (err, res) {\n  res.status.should.equal(201);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "49735134-41ef-4be2-9f0f-7f9ac795a017",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT modify a device (device0003) without valid token",
            "fullTitle": "Devices API unit test should NOT modify a device (device0003) without valid token",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001').expect('Content-type', /json/).send({ \"maxTempWarning\": 18 }).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "63270d53-1f29-477a-a8fd-e38d4fbd5f7b",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should modify a device (device0003) with admin (Claire101) token",
            "fullTitle": "Devices API unit test should modify a device (device0003) with admin (Claire101) token",
            "timedOut": false,
            "duration": 16,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.Y2xhaXJlMTAx.hlwNkvb-NsWNNCTrznxQEQmHlxdLO-UqOUOKiRPdeJQ').expect('Content-type', /json/).send({ \"maxTempWarning\": 18 }).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "49791aa7-bcd6-4558-bca4-8703661cfcbd",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT modify a device (device0001) with non-registered owners (eddie101) token",
            "fullTitle": "Devices API unit test should NOT modify a device (device0001) with non-registered owners (eddie101) token",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZWRkaWUxMDE.22U6dBqkmIsjRMD1bt-9uVOBKeFdXggBkGwCqVbq6GE').expect('Content-type', /json/).send({ \"maxTempWarning\": 18 }).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "66b66681-75d6-482b-8059-864fa145c7e3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should modify a device (device0001) with registered owners (danny101) token",
            "fullTitle": "Devices API unit test should modify a device (device0001) with registered owners (danny101) token",
            "timedOut": false,
            "duration": 13,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZGFubnkxMDE.Gy0IIgskxPslMHZxCbBTzJSIAWvNoBA5EcCLTpuc--k').expect('Content-type', /json/).send({ \"maxTempWarning\": 18 }).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "a71a8920-c6fb-4cfc-a8fd-c429aba557fa",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT modify a journey (journey0001) with non-registered owners (eddie101) token",
            "fullTitle": "Devices API unit test should NOT modify a journey (journey0001) with non-registered owners (eddie101) token",
            "timedOut": false,
            "duration": 12,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001/journey/journey0001startDateTime').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZWRkaWUxMDE.22U6dBqkmIsjRMD1bt-9uVOBKeFdXggBkGwCqVbq6GE').expect('Content-type', /json/).send({ \"finishDateTime\": 'testDateTime' }).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "b95a83ac-ee0b-444e-a455-f97c13dff1e5",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should modify a journey (journey0001) with registered owners (danny101) token",
            "fullTitle": "Devices API unit test should modify a journey (journey0001) with registered owners (danny101) token",
            "timedOut": false,
            "duration": 20,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0001/journey/journey0001startDateTime').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZGFubnkxMDE.Gy0IIgskxPslMHZxCbBTzJSIAWvNoBA5EcCLTpuc--k').expect('Content-type', /json/).send({ \"finishDateTime\": 'testDateTime' }).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "749fb0e7-095a-4793-aee3-c75462d9c317",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT register an owner (eddie101) with a device (device0002) without valid token",
            "fullTitle": "Devices API unit test should NOT register an owner (eddie101) with a device (device0002) without valid token",
            "timedOut": false,
            "duration": 4,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0002/registeredOwner').expect('Content-type', /json/).send({ \"registeredOwner\": 'eddie101' }).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "fc77be6f-cf1f-4669-a154-b80b8c5e37c3",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should register an owner (eddie101) with a device (device0002) with valid token",
            "fullTitle": "Devices API unit test should register an owner (eddie101) with a device (device0002) with valid token",
            "timedOut": false,
            "duration": 14,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).put('/api/device/device0002/registeredOwner').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZWRkaWUxMDE.22U6dBqkmIsjRMD1bt-9uVOBKeFdXggBkGwCqVbq6GE').expect('Content-type', /json/).send({ \"registeredOwner\": 'eddie101' }).expect(200).end(function (err, res) {\n  res.status.should.equal(200);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "d50542b4-5ddb-43a1-8407-23ab078cdd22",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT delete a device (device0002) without valid token",
            "fullTitle": "Devices API unit test should NOT delete a device (device0002) without valid token",
            "timedOut": false,
            "duration": 3,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/device/device0002').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "b8338c55-8d72-4a87-8937-56775aa124a4",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should NOT delete a device (device0001) with non-admin (danny101) token",
            "fullTitle": "Devices API unit test should NOT delete a device (device0001) with non-admin (danny101) token",
            "timedOut": false,
            "duration": 5,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/device/device0002').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.ZGFubnkxMDE.Gy0IIgskxPslMHZxCbBTzJSIAWvNoBA5EcCLTpuc--k').expect('Content-type', /json/).expect(401).end(function (err, res) {\n  res.status.should.equal(401);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "c235a404-15a2-4a91-bc83-b0bdb3205c1f",
            "isHook": false,
            "skipped": false
          },
          {
            "title": "should delete a device (device0002) with admin (claire101) token",
            "fullTitle": "Devices API unit test should delete a device (device0002) with admin (claire101) token",
            "timedOut": false,
            "duration": 9,
            "state": "passed",
            "speed": "fast",
            "pass": true,
            "fail": false,
            "pending": false,
            "code": "(0, _supertest2.default)(_index.server).delete('/api/device/device0002').set('Authorization', 'BEARER eyJhbGciOiJIUzI1NiJ9.Y2xhaXJlMTAx.hlwNkvb-NsWNNCTrznxQEQmHlxdLO-UqOUOKiRPdeJQ').expect('Content-type', /json/).expect(204).end(function (err, res) {\n  res.status.should.equal(204);\n  done();\n});",
            "err": {},
            "isRoot": false,
            "uuid": "4e783e56-3cea-4ea6-8cb9-b696d8492017",
            "isHook": false,
            "skipped": false
          }
        ],
        "suites": [],
        "passes": [
          "9d740ce3-ac37-4128-9044-b8934be08f4b",
          "0357461f-e4df-4963-b5db-a48a3b674ce7",
          "f0609406-1b8d-4cd7-941f-53c91cb4fde0",
          "d9d7b560-8710-4296-879c-e99102423851",
          "1c0e260f-ae5e-425e-9fe8-28696dd21a02",
          "49735134-41ef-4be2-9f0f-7f9ac795a017",
          "63270d53-1f29-477a-a8fd-e38d4fbd5f7b",
          "49791aa7-bcd6-4558-bca4-8703661cfcbd",
          "66b66681-75d6-482b-8059-864fa145c7e3",
          "a71a8920-c6fb-4cfc-a8fd-c429aba557fa",
          "b95a83ac-ee0b-444e-a455-f97c13dff1e5",
          "749fb0e7-095a-4793-aee3-c75462d9c317",
          "fc77be6f-cf1f-4669-a154-b80b8c5e37c3",
          "d50542b4-5ddb-43a1-8407-23ab078cdd22",
          "b8338c55-8d72-4a87-8937-56775aa124a4",
          "c235a404-15a2-4a91-bc83-b0bdb3205c1f",
          "4e783e56-3cea-4ea6-8cb9-b696d8492017"
        ],
        "failures": [],
        "pending": [],
        "skipped": [],
        "duration": 182,
        "root": false,
        "rootEmpty": false,
        "_timeout": 2000
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 2000
  },
  "copyrightYear": 2018
}